{"version":3,"sources":["firebase.js","contexts/AuthContext.js","privateRoute.js","dashboard.js","updateProfile.js","signup.js","login.js","forgotPassword.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","passwordReset","sendPasswordResetEmail","logout","signOut","updateProfile","displayName","photoURL","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Dashboard","error","setError","history","useHistory","handleLogout","a","push","message","className","style","maxWidth","Card","Img","variant","src","alt","Body","Title","Alert","verifiedEmail","Button","onClick","UpdateProfile","emailRef","useRef","passwordRef","passwordConfirmRef","displayNameRef","photoUrlRef","handleUpdate","e","preventDefault","promises","current","Promise","all","then","catch","err","finally","Form","onSubmit","Group","id","Label","Control","type","ref","defaultValue","required","placeholder","disabled","Signup","success","setSuccess","Login","ForgotPassword","App","Container","minHeight","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3f6e534.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n});\n\nexport const auth = app.auth();\nexport default app;","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({children}) {\n    const [currentUser, setCurrentUser] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    const signup = (email, password) => auth.createUserWithEmailAndPassword(email, password);\n\n    const login = (email, password) => auth.signInWithEmailAndPassword(email, password);\n    \n    const passwordReset = email => auth.sendPasswordResetEmail(email);\n\n    const updateProfile = (displayName, photoURL) => auth.currentUser.updateProfile({displayName, photoURL});\n\n    const updateEmail = email => auth.currentUser.updateEmail(email);\n    \n    const updatePassword = password => auth.currentUser.updatePassword(password);\n\n    const logout = () => auth.signOut();\n    \n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        });\n\n        return unsubscribe;\n    }, []);\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        passwordReset,\n        logout,\n        updateProfile,\n        updateEmail,\n        updatePassword,\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}","import React from 'react';\nimport { useAuth } from './contexts/AuthContext';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    const { currentUser } = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                return currentUser ? \n                <Component {...props} /> :\n                <Redirect to=\"/login\" />\n            }}\n        >\n        </Route>\n    )\n}\n","import React, { useState } from 'react';\nimport { Card, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from './contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function Dashboard() {\n    const [error, setError] = useState(\"\");\n    const history = useHistory();\n    const { currentUser, logout } = useAuth();\n    \n    const handleLogout = async () => {\n        try {\n            await logout();\n            history.push(\"/login\");\n        }\n        \n        catch (err) {\n            setError(err.message);\n        }\n    }\n\n    return (\n        <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n            <Card>\n                <Card.Img variant=\"top\" src={currentUser.photoURL ? currentUser.photoURL : \"https://via.placeholder.com/350x200?text=add+your+image+:)\"} alt=\"profile image\" />\n                <Card.Body>\n                    <Card.Title className=\"text-center\">{currentUser.displayName ? currentUser.displayName : \"undefined username\"}</Card.Title>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <p><strong>Email:</strong> {currentUser.email}</p>\n                    <p><strong>verified:</strong> {currentUser.verifiedEmail ? \"Yes\" : \"No\"}</p>\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Button onClick={handleLogout} variant=\"link\">Log out</Button>\n            </div>\n        </div>\n    )\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function UpdateProfile() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const displayNameRef = useRef();\n    const photoUrlRef = useRef();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { updateProfile, updateEmail, updatePassword, currentUser } = useAuth();\n    const history = useHistory();\n\n\n    const handleUpdate = async e => {\n        e.preventDefault();\n        \n        setLoading(true);\n        let promises = [];\n\n        if (emailRef.current.value !== currentUser.email)\n            promises.push(updateEmail(emailRef.current.value));\n        \n        if (passwordRef.current.value && passwordConfirmRef.current.value === passwordRef.current.value)\n            promises.push(updatePassword(passwordRef.current.value));\n\n        if ((displayNameRef.current.value && displayNameRef.current.value !== currentUser.displayName) || photoUrlRef.current.value)\n            promises.push(updateProfile(displayNameRef.current.value, photoUrlRef.current.value));\n\n        Promise.all(promises)\n            .then(() => {\n                history.push(\"/\");\n            })\n            .catch(err => {\n                setError(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            })\n    }\n\n    return (\n        <>\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n                <Card>\n                    <Card.Body>\n                        <h1 className=\"text-center mb-4\">Update Profile</h1>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n                        <Form onSubmit={handleUpdate}>\n                            <Form.Group id=\"Email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email} required />\n                            </Form.Group>\n                            <Form.Group id=\"displayName\">\n                                <Form.Label>Display Name</Form.Label>\n                                <Form.Control type=\"text\" ref={displayNameRef} defaultValue={currentUser.displayName} placeholder=\"user name\" />\n                            </Form.Group>\n                            <Form.Group id=\"photoUrl\">\n                                <Form.Label>Photo URL</Form.Label>\n                                <Form.Control type=\"url\" ref={photoUrlRef} defaultValue={currentUser.photoURL} placeholder=\"image URL for profile\" />\n                            </Form.Group>\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"text\" ref={passwordRef} placeholder=\"ignore if you don't want to change password\" />\n                            </Form.Group>\n                            <Form.Group id=\"password-confirm\">\n                                <Form.Label>Password Confirmation</Form.Label>\n                                <Form.Control type=\"text\" ref={passwordConfirmRef} placeholder=\"ignore if you don't want to change password\" />\n                            </Form.Group>\n                            <div className=\"d-flex align-items-center justify-content-around mt-4\">\n                                <Button disabled={loading} className=\"w-40\" type=\"submit\" >update</Button>\n                            </div>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                <p className=\"w-100 text-center mt-2\">\n                    <Link to=\"/\">cancel</Link>\n                </p>\n            </div>\n        </>\n    )\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport const Signup = () => {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { signup } = useAuth();\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        \n        if(passwordRef.current.value !== passwordConfirmRef.current.value) {\n            setSuccess(\"\");\n            return setError(\"Password do not match\");\n        }\n\n        try {\n            setLoading(true);\n            await signup(\n                emailRef.current.value,\n                passwordRef.current.value\n            );\n            setError(\"\");\n            setSuccess(\"account created successfully!\");\n            setLoading(false);\n            history.push(\"/\");\n        }\n        catch (err) {\n            setLoading(false);\n            setSuccess(\"\");\n            return setError(err.message);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n                <Card>\n                    <Card.Body>\n                        <h1 className=\"text-center mb-4\">Sign Up</h1>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n                        {success && <Alert variant=\"success\">{success}</Alert>}\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group id=\"Email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} required />\n                            </Form.Group>\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required />\n                            </Form.Group>\n                            <Form.Group id=\"password-confirm\">\n                                <Form.Label>Password Confirmation</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                            </Form.Group>\n                            <div className=\"d-flex justify-content-center\">\n                                <Button disabled={loading} className=\"w-20 m-auto mt-2\" type=\"submit\" >sign up</Button>\n                            </div>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                <p className=\"w-100 text-center mt-2\">\n                    Already have an account? \n                    <Link to=\"/login\">Log in</Link>\n                </p>\n            </div>\n        </>\n    )\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport const Login = () => {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { login } = useAuth();\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            setLoading(true);\n            await login(\n                emailRef.current.value,\n                passwordRef.current.value\n            );\n            setError(\"\");\n            setSuccess(\"logged in successfully!\");\n            setLoading(false);\n            history.push(\"/\");\n        }\n        catch (err) {\n            setLoading(false);\n            setSuccess(\"\");\n            return setError(err.message);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n                <Card>\n                    <Card.Body>\n                        <h1 className=\"text-center mb-4\">Log in</h1>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n                        {success && <Alert variant=\"success\">{success}</Alert>}\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group id=\"Email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} required />\n                            </Form.Group>\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required />\n                            </Form.Group>\n                            <div className=\"d-flex align-items-center justify-content-around mt-4\">\n                                <Button disabled={loading} className=\"w-40\" type=\"submit\" >log in</Button>\n                                <Link to=\"forgot-password\">Forgot Password?</Link>\n                            </div>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                <p className=\"w-100 text-center mt-2\">\n                    New here?  \n                    <Link to=\"/signup\">Sign up</Link>\n                </p>\n            </div>\n        </>\n    )\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nexport const ForgotPassword = () => {\n    const emailRef = useRef();\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { passwordReset } = useAuth();\n\n\n    async function handleReset(e) {\n        e.preventDefault();\n        try {\n            setLoading(true);\n            await passwordReset(emailRef.current.value);\n            setError(\"\");\n            setSuccess(\"Password reset instructions has been sent to you inbox!\");\n            setLoading(false);\n        }\n        catch (err) {\n            setLoading(false);\n            setSuccess(\"\");\n            return setError(err.message);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n                <Card>\n                    <Card.Body>\n                        <h1 className=\"text-center mb-4\">Log in</h1>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n                        {success && <Alert variant=\"success\">{success}</Alert>}\n                        <Form onSubmit={handleReset}>\n                            <Form.Group id=\"Email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" ref={emailRef} required />\n                            </Form.Group>\n                            <div className=\"d-flex align-items-center justify-content-around mt-4\">\n                                <Button disabled={loading} className=\"w-40\" type=\"submit\" >Password Reset</Button>\n                                <Link to=\"/login\">login</Link>\n                            </div>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                <p className=\"w-100 text-center mt-2\">\n                    New here? \n                    <Link to=\"/signup\">Sign up</Link>\n                </p>\n            </div>\n        </>\n    )\n}","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport PrivateRoute from \"./privateRoute\";\nimport Dashboard from \"./dashboard\";\nimport UpdateProfile from \"./updateProfile\";\nimport { Signup } from \"./signup\"\nimport { Login } from \"./login\";\nimport { ForgotPassword } from \"./forgotPassword\";\n\nfunction App() {\n\n  return (\n    <Container \n      className=\"d-flex align-items-center justify-content-center\" \n      style={{ minHeight: \"100vh\" }}\n    >\n      <BrowserRouter>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider>\n      </BrowserRouter>\n\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}